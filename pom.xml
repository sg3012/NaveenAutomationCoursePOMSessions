<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>NaveenAutomationCoursePOMSessions</groupId>
	<artifactId>NaveenAutomationCoursePOMSessions</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>NaveenAutomationCoursePOMSessions</name>
	<!-- FIXME change it to the project's website -->
	<url>https://naveenautomationlabs.com/opencart</url>

	<properties>
		<!-- 1. The properties section of an xml file contains some user defined 
			variables with some values which can later be used in the Dependencies, Plugins 
			sections etc. 2. Advantges of using variables in the XML files is we don't 
			need to hardcode the values of version numbers in various dependencies, plugins 
			in the respective sections. -->

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.22</maven.compiler.source>
		<maven.compiler.target>1.22</maven.compiler.target>
		<extentreports-version>5.1.2</extentreports-version>
		<aspectj.version>1.9.22.1</aspectj.version>
		<surefire.argline>
			-javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
		</surefire.argline>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>4.31.0</version>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>7.10.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>4.1.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>4.1.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>4.1.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>4.1.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>ooxml-schemas</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>openxml4j</artifactId>
			<version>1.0-beta</version>
		</dependency>

		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>3.0.2</version>
		</dependency>

		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.5.13.4</version>
		</dependency>

		<dependency>
			<groupId>com.aventstack</groupId>
			<artifactId>extentreports</artifactId>
			<!--extentreports-version is the variable created under Properties section 
				of this XML file and used here -->
			<version>${extentreports-version}</version>
		</dependency>

		<dependency>
			<groupId>io.qameta.allure</groupId>
			<artifactId>allure-testng</artifactId>
			<version>2.29.0</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<release>22</release>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.5.3</version>
				<configuration>
					<forkCount>3</forkCount>
					<reuseForks>true</reuseForks>

					<suiteXmlFiles>
						<suiteXmlFile>src/test/resources/testrunners/testng_regression.xml</suiteXmlFile>
					</suiteXmlFiles>

					<!-- <suiteXmlFiles> <suiteXmlFile>${suiteXmlFile}</suiteXmlFile> </suiteXmlFiles> 
						We are giving variable in the filename in the suiteXmlfile tag here because 
						we will pass this as a variable from the Jenkinsfile to pick corresponding 
						testng runner files. This parameter need not be exactly same as the Jenkinsfile 
						parameter -->
					<argLine>
						${surefire.argline}
					</argLine>
				</configuration>
			</plugin>

			<!-- Maven failsafe and surefire report plugin integration (for generating 
				reports) -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-report-plugin</artifactId> 
				<version>3.5.3</version> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> 
				<artifactId>maven-failsafe-plugin</artifactId> <version>3.5.3</version> <configuration> 
				<suiteXmlFiles> <suiteXmlFile>src/test/resources/testrunners/testng_integration_regression.xml</suiteXmlFile> 
				</suiteXmlFiles> <includes> <include>**/*Test.java</include> </includes> 
				</configuration> <executions> <execution> <goals> <goal>integration-test</goal> 
				<goal>verify</goal> </goals> </execution> </executions> </plugin> <plugin> 
				<groupId>org.apache.maven.plugins</groupId> <artifactId>maven-site-plugin</artifactId> 
				<version>3.21.0</version> </plugin> -->
		</plugins>
	</build>

	<!-- Maven surefire report plugin reporting section (for generating reports) -->
	<!-- <reporting> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> 
		<artifactId>maven-surefire-report-plugin</artifactId> <version>3.5.3</version> 
		<reportSets> <reportSet> <id>integration-tests</id> <reports> <report>failsafe-report-only</report> 
		<report>report-only</report> </reports> </reportSet> </reportSets> </plugin> 
		</plugins> </reporting> -->
</project>
